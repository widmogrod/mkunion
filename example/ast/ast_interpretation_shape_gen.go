// Code generated by mkunion. DO NOT EDIT.
package ast

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(InterpretValueASTShape())
	shape.Register(IntrprateOperatorASTShape())
	shape.Register(MapAnyShape())
}

//shape:shape
func InterpretValueASTShape() shape.Shape {
	return &shape.StructLike{
		Name:          "InterpretValueAST",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Fields: []*shape.FieldLike{
			{
				Name: "V",
				Type: &shape.RefName{
					Name:          "MapAny",
					PkgName:       "ast",
					PkgImportName: "github.com/widmogrod/mkunion/example/ast",
				},
			},
		},
	}
}

//shape:shape
func MapAnyShape() shape.Shape {
	return &shape.AliasLike{
		Name:          "MapAny",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		IsAlias:       true,
		Type: &shape.MapLike{
			Key: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			Val: &shape.Any{},
		},
	}
}

//shape:shape
func IntrprateOperatorASTShape() shape.Shape {
	return &shape.StructLike{
		Name:          "IntrprateOperatorAST",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
	}
}
