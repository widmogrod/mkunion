// Code generated by mkunion. DO NOT EDIT.
package ast

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(BoostRuleOneOfShape())
	shape.Register(ConstBoostShape())
	shape.Register(FieldShape())
	shape.Register(FiledBoostRuleShape())
	shape.Register(FiledRuleShape())
	shape.Register(HumanFriendlyRulesShape())
	shape.Register(RuleOneOfShape())
	shape.Register(ValueBoostShape())
}

//shape:shape
func BoostRuleOneOfShape() shape.Shape {
	return &shape.StructLike{
		Name:          "BoostRuleOneOf",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Fields: []*shape.FieldLike{
			{
				Name: "ConstBoost",
				Type: &shape.PointerLike{
					Type: &shape.RefName{
						Name:          "ConstBoost",
						PkgName:       "ast",
						PkgImportName: "github.com/widmogrod/mkunion/example/ast",
					},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "boost",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "ValueBoost",
				Type: &shape.PointerLike{
					Type: &shape.RefName{
						Name:          "ValueBoost",
						PkgName:       "ast",
						PkgImportName: "github.com/widmogrod/mkunion/example/ast",
					},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "valueBoost",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
		},
	}
}

//shape:shape
func ConstBoostShape() shape.Shape {
	return &shape.StructLike{
		Name:          "ConstBoost",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Fields: []*shape.FieldLike{
			{
				Name: "Boost",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "boost",
					},
				},
			},
			{
				Name: "RuleOneOf",
				Type: &shape.RefName{
					Name:          "RuleOneOf",
					PkgName:       "ast",
					PkgImportName: "github.com/widmogrod/mkunion/example/ast",
				},
			},
		},
	}
}

//shape:shape
func ValueBoostShape() shape.Shape {
	return &shape.StructLike{
		Name:          "ValueBoost",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Fields: []*shape.FieldLike{
			{
				Name: "RuleOneOf",
				Type: &shape.RefName{
					Name:          "RuleOneOf",
					PkgName:       "ast",
					PkgImportName: "github.com/widmogrod/mkunion/example/ast",
				},
			},
		},
	}
}

//shape:shape
func RuleOneOfShape() shape.Shape {
	return &shape.StructLike{
		Name:          "RuleOneOf",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Fields: []*shape.FieldLike{
			{
				Name: "Eq",
				Type: &shape.Any{},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "eq",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "Gt",
				Type: &shape.Any{},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "gt",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
		},
	}
}

//shape:shape
func FieldShape() shape.Shape {
	return &shape.AliasLike{
		Name:          "Field",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Type:          &shape.PrimitiveLike{Kind: &shape.StringLike{}},
	}
}

//shape:shape
func FiledBoostRuleShape() shape.Shape {
	return &shape.AliasLike{
		Name:          "FiledBoostRule",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Type: &shape.MapLike{
			Key: &shape.RefName{
				Name:          "Field",
				PkgName:       "ast",
				PkgImportName: "github.com/widmogrod/mkunion/example/ast",
			},
			Val: &shape.RefName{
				Name:          "BoostRuleOneOf",
				PkgName:       "ast",
				PkgImportName: "github.com/widmogrod/mkunion/example/ast",
			},
		},
	}
}

//shape:shape
func FiledRuleShape() shape.Shape {
	return &shape.AliasLike{
		Name:          "FiledRule",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Type: &shape.MapLike{
			Key: &shape.RefName{
				Name:          "Field",
				PkgName:       "ast",
				PkgImportName: "github.com/widmogrod/mkunion/example/ast",
			},
			Val: &shape.RefName{
				Name:          "RuleOneOf",
				PkgName:       "ast",
				PkgImportName: "github.com/widmogrod/mkunion/example/ast",
			},
		},
	}
}

//shape:shape
func HumanFriendlyRulesShape() shape.Shape {
	return &shape.StructLike{
		Name:          "HumanFriendlyRules",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Fields: []*shape.FieldLike{
			{
				Name: "AtLeastOneOf",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "FiledBoostRule",
						PkgName:       "ast",
						PkgImportName: "github.com/widmogrod/mkunion/example/ast",
					},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "atLeastOneOf",
					},
				},
			},
			{
				Name: "MustMatch",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "FiledRule",
						PkgName:       "ast",
						PkgImportName: "github.com/widmogrod/mkunion/example/ast",
					},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "mustMatch",
					},
				},
			},
		},
	}
}
