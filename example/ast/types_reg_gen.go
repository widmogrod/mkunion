// Code generated by mkunion. DO NOT EDIT.
package ast

import (
	"github.com/widmogrod/mkunion/x/shared"
	"testing"
)

func init() {
	shared.TypeRegistryStore[Accessor]("github.com/widmogrod/mkunion/example/ast.Accessor")
	shared.TypeRegistryStore[And]("github.com/widmogrod/mkunion/example/ast.And")
	shared.TypeRegistryStore[Eq]("github.com/widmogrod/mkunion/example/ast.Eq")
	shared.TypeRegistryStore[EqTo]("github.com/widmogrod/mkunion/example/ast.EqTo")
	shared.TypeRegistryStore[GrThan]("github.com/widmogrod/mkunion/example/ast.GrThan")
	shared.TypeRegistryStore[Gt]("github.com/widmogrod/mkunion/example/ast.Gt")
	shared.TypeRegistryStore[InterpretValueAST]("github.com/widmogrod/mkunion/example/ast.InterpretValueAST")
	shared.TypeRegistryStore[IntrprateOperatorAST]("github.com/widmogrod/mkunion/example/ast.IntrprateOperatorAST")
	shared.TypeRegistryStore[Lit]("github.com/widmogrod/mkunion/example/ast.Lit")
	shared.TypeRegistryStore[Not]("github.com/widmogrod/mkunion/example/ast.Not")
	shared.TypeRegistryStore[Or]("github.com/widmogrod/mkunion/example/ast.Or")
	shared.TypeRegistryStore[OrFields]("github.com/widmogrod/mkunion/example/ast.OrFields")
	shared.TypeRegistryStore[ScoreCalculationFromDescriptionOfBestResult]("github.com/widmogrod/mkunion/example/ast.ScoreCalculationFromDescriptionOfBestResult")
	shared.TypeRegistryStore[ScoreCalculationFromHumanFriendlyRules]("github.com/widmogrod/mkunion/example/ast.ScoreCalculationFromHumanFriendlyRules")
	shared.TypeRegistryStore[TranslateSyntaxASTtoOperatorAST]("github.com/widmogrod/mkunion/example/ast.TranslateSyntaxASTtoOperatorAST")
	shared.TypeRegistryStore[bool]("bool")
	shared.TypeRegistryStore[float64]("float64")
	shared.TypeRegistryStore[testing.T]("testing.T")
}
