// Code generated by mkunion. DO NOT EDIT.
package ast

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(SyntaxSugarUnionJSONShape())
}

//shape:shape
func SyntaxSugarUnionJSONShape() shape.Shape {
	return &shape.StructLike{
		Name:          "SyntaxSugarUnionJSON",
		PkgName:       "ast",
		PkgImportName: "github.com/widmogrod/mkunion/example/ast",
		Fields: []*shape.FieldLike{
			{
				Name: "Type",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "$type",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "EqTo",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "ast.EqTo",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "GrThan",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "ast.GrThan",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "OrFields",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "ast.OrFields",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
		},
	}
}
