// Code generated by mkunion. DO NOT EDIT.
package state_machine

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(CancelOrderCMDShape())
	shape.Register(CommandShape())
	shape.Register(CompleteOrderCMDShape())
	shape.Register(ConfirmOrderCMDShape())
	shape.Register(CreateOrderCMDShape())
	shape.Register(DependenciesShape())
	shape.Register(OrderCancelledShape())
	shape.Register(OrderCompletedShape())
	shape.Register(OrderItemShape())
	shape.Register(OrderPendingShape())
	shape.Register(OrderProcessingShape())
	shape.Register(StartProcessingCMDShape())
	shape.Register(StateShape())
}

//shape:shape

func CommandShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "Command",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Variant: []shape.Shape{
			CreateOrderCMDShape(),
			StartProcessingCMDShape(),
			CompleteOrderCMDShape(),
			CancelOrderCMDShape(),
			ConfirmOrderCMDShape(),
		},
	}
}

func CreateOrderCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "CreateOrderCMD",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "OrderID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Items",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "OrderItem",
						PkgName:       "state_machine",
						PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func StartProcessingCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "StartProcessingCMD",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "WorkerID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func CompleteOrderCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "CompleteOrderCMD",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "TotalAmount",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func CancelOrderCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "CancelOrderCMD",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "Reason",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func ConfirmOrderCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "ConfirmOrderCMD",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

//shape:shape
func OrderItemShape() shape.Shape {
	return &shape.StructLike{
		Name:          "OrderItem",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "SKU",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Quantity",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "Price",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
			},
		},
	}
}

//shape:shape

func StateShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "State",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Variant: []shape.Shape{
			OrderPendingShape(),
			OrderProcessingShape(),
			OrderCompletedShape(),
			OrderCancelledShape(),
		},
	}
}

func OrderPendingShape() shape.Shape {
	return &shape.StructLike{
		Name:          "OrderPending",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "OrderID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Items",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "OrderItem",
						PkgName:       "state_machine",
						PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func OrderProcessingShape() shape.Shape {
	return &shape.StructLike{
		Name:          "OrderProcessing",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "OrderID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Items",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "OrderItem",
						PkgName:       "state_machine",
						PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
					},
				},
			},
			{
				Name: "WorkerID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func OrderCompletedShape() shape.Shape {
	return &shape.StructLike{
		Name:          "OrderCompleted",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "OrderID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Items",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "OrderItem",
						PkgName:       "state_machine",
						PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
					},
				},
			},
			{
				Name: "TotalAmount",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func OrderCancelledShape() shape.Shape {
	return &shape.StructLike{
		Name:          "OrderCancelled",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "OrderID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Reason",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

//shape:shape
func DependenciesShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Dependencies",
		PkgName:       "state_machine",
		PkgImportName: "github.com/widmogrod/mkunion/example/state_machine",
	}
}
