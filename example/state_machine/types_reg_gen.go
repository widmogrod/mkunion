// Code generated by mkunion. DO NOT EDIT.
package state_machine

import (
	"github.com/widmogrod/mkunion/x/machine"
	"github.com/widmogrod/mkunion/x/schema"
	"github.com/widmogrod/mkunion/x/shared"
	"github.com/widmogrod/mkunion/x/storage/schemaless"
	"testing"
)

func init() {
	shared.TypeRegistryStore[CancelOrderCMD]("github.com/widmogrod/mkunion/example/state_machine.CancelOrderCMD")
	shared.TypeRegistryStore[Command]("github.com/widmogrod/mkunion/example/state_machine.Command")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example/state_machine.Command", CommandFromJSON, CommandToJSON)
	shared.TypeRegistryStore[CommandUnionJSON]("github.com/widmogrod/mkunion/example/state_machine.CommandUnionJSON")
	shared.TypeRegistryStore[CommandVisitor]("github.com/widmogrod/mkunion/example/state_machine.CommandVisitor")
	shared.TypeRegistryStore[CompleteOrderCMD]("github.com/widmogrod/mkunion/example/state_machine.CompleteOrderCMD")
	shared.TypeRegistryStore[ConfirmOrderCMD]("github.com/widmogrod/mkunion/example/state_machine.ConfirmOrderCMD")
	shared.TypeRegistryStore[CreateOrderCMD]("github.com/widmogrod/mkunion/example/state_machine.CreateOrderCMD")
	shared.TypeRegistryStore[Dependencies]("github.com/widmogrod/mkunion/example/state_machine.Dependencies")
	shared.TypeRegistryStore[OrderCancelled]("github.com/widmogrod/mkunion/example/state_machine.OrderCancelled")
	shared.TypeRegistryStore[OrderCompleted]("github.com/widmogrod/mkunion/example/state_machine.OrderCompleted")
	shared.TypeRegistryStore[OrderItem]("github.com/widmogrod/mkunion/example/state_machine.OrderItem")
	shared.TypeRegistryStore[OrderPending]("github.com/widmogrod/mkunion/example/state_machine.OrderPending")
	shared.TypeRegistryStore[OrderProcessing]("github.com/widmogrod/mkunion/example/state_machine.OrderProcessing")
	shared.TypeRegistryStore[StartProcessingCMD]("github.com/widmogrod/mkunion/example/state_machine.StartProcessingCMD")
	shared.TypeRegistryStore[State]("github.com/widmogrod/mkunion/example/state_machine.State")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example/state_machine.State", StateFromJSON, StateToJSON)
	shared.TypeRegistryStore[StateUnionJSON]("github.com/widmogrod/mkunion/example/state_machine.StateUnionJSON")
	shared.TypeRegistryStore[StateVisitor]("github.com/widmogrod/mkunion/example/state_machine.StateVisitor")
	shared.TypeRegistryStore[machine.Machine[Dependencies, Command, State]]("github.com/widmogrod/mkunion/x/machine.Machine[github.com/widmogrod/mkunion/example/state_machine.Dependencies,github.com/widmogrod/mkunion/example/state_machine.Command,github.com/widmogrod/mkunion/example/state_machine.State]")
	shared.TypeRegistryStore[schemaless.Record[State]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/example/state_machine.State]")
	shared.TypeRegistryStore[schemaless.Repository[schema.Schema]]("github.com/widmogrod/mkunion/x/storage/schemaless.Repository[github.com/widmogrod/mkunion/x/schema.Schema]")
	shared.TypeRegistryStore[testing.T]("testing.T")
}
