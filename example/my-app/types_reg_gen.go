// Code generated by mkunion. DO NOT EDIT.
package main

import (
	"github.com/widmogrod/mkunion/x/machine"
	"github.com/widmogrod/mkunion/x/shared"
	"github.com/widmogrod/mkunion/x/storage/predicate"
	"github.com/widmogrod/mkunion/x/storage/schemaless"
	"github.com/widmogrod/mkunion/x/storage/schemaless/typedful"
	"github.com/widmogrod/mkunion/x/taskqueue"
	"github.com/widmogrod/mkunion/x/workflow"
)

func init() {
	shared.TypeRegistryStore[machine.Machine[workflow.Dependency, workflow.Command, workflow.State]]("github.com/widmogrod/mkunion/x/machine.Machine[github.com/widmogrod/mkunion/x/workflow.Dependency,github.com/widmogrod/mkunion/x/workflow.Command,github.com/widmogrod/mkunion/x/workflow.State]")
	shared.TypeRegistryStore[ChatResponses]("github.com/widmogrod/mkunion/exammple/my-app.ChatResponses")
	shared.TypeRegistryStore[SystemResponse]("github.com/widmogrod/mkunion/exammple/my-app.SystemResponse")
	shared.TypeRegistryStore[UserMessage]("github.com/widmogrod/mkunion/exammple/my-app.UserMessage")
	shared.TypeRegistryStore[UserResponse]("github.com/widmogrod/mkunion/exammple/my-app.UserResponse")
	shared.TypeRegistryStore[predicate.WherePredicates]("github.com/widmogrod/mkunion/x/storage/predicate.WherePredicates")
	shared.TypeRegistryStore[schemaless.FindingRecords[schemaless.Record[State]]]("github.com/widmogrod/mkunion/x/storage/schemaless.FindingRecords[Record[github.com/widmogrod/mkunion/exammple/my-app.State]]")
	shared.TypeRegistryStore[schemaless.FindingRecords[schemaless.Record[workflow.Flow]]]("github.com/widmogrod/mkunion/x/storage/schemaless.FindingRecords[Record[github.com/widmogrod/mkunion/x/workflow.Flow]]")
	shared.TypeRegistryStore[schemaless.FindingRecords[schemaless.Record[workflow.State]]]("github.com/widmogrod/mkunion/x/storage/schemaless.FindingRecords[Record[github.com/widmogrod/mkunion/x/workflow.State]]")
	shared.TypeRegistryStore[schemaless.PageResult[schemaless.Record[workflow.Flow]]]("github.com/widmogrod/mkunion/x/storage/schemaless.PageResult[Record[github.com/widmogrod/mkunion/x/workflow.Flow]]")
	shared.TypeRegistryStore[schemaless.PageResult[schemaless.Record[workflow.State]]]("github.com/widmogrod/mkunion/x/storage/schemaless.PageResult[Record[github.com/widmogrod/mkunion/x/workflow.State]]")
	shared.TypeRegistryStore[schemaless.Record[State]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/exammple/my-app.State]")
	shared.TypeRegistryStore[schemaless.Record[workflow.Flow]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/workflow.Flow]")
	shared.TypeRegistryStore[schemaless.Record[workflow.State]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/workflow.State]")
	shared.TypeRegistryStore[schemaless.UpdateRecords[schemaless.Record[workflow.Flow]]]("github.com/widmogrod/mkunion/x/storage/schemaless.UpdateRecords[Record[github.com/widmogrod/mkunion/x/workflow.Flow]]")
	shared.TypeRegistryStore[schemaless.UpdateRecords[schemaless.Record[workflow.State]]]("github.com/widmogrod/mkunion/x/storage/schemaless.UpdateRecords[Record[github.com/widmogrod/mkunion/x/workflow.State]]")
	shared.TypeRegistryStore[taskqueue.Description]("github.com/widmogrod/mkunion/x/taskqueue.Description")
	shared.TypeRegistryStore[taskqueue.FunctionProcessor[schemaless.Record[workflow.State]]]("github.com/widmogrod/mkunion/x/taskqueue.FunctionProcessor[github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/workflow.State]]")
	shared.TypeRegistryStore[taskqueue.Task[schemaless.Record[workflow.State]]]("github.com/widmogrod/mkunion/x/taskqueue.Task[github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/workflow.State]]")
	shared.TypeRegistryStore[typedful.TypedRepoWithAggregator[workflow.State, any]]("github.com/widmogrod/mkunion/x/storage/schemaless/typedful.TypedRepoWithAggregator[github.com/widmogrod/mkunion/x/workflow.State,any]")
	shared.TypeRegistryStore[workflow.DI]("github.com/widmogrod/mkunion/x/workflow.DI")
	shared.TypeRegistryStore[workflow.Flow]("github.com/widmogrod/mkunion/x/workflow.Flow")
	shared.TypeRegistryStore[workflow.FlowRef]("github.com/widmogrod/mkunion/x/workflow.FlowRef")
	shared.TypeRegistryStore[workflow.FunctionInput]("github.com/widmogrod/mkunion/x/workflow.FunctionInput")
	shared.TypeRegistryStore[workflow.FunctionOutput]("github.com/widmogrod/mkunion/x/workflow.FunctionOutput")
}
