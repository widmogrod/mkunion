// Code generated by mkunion. DO NOT EDIT.
package main

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(ErrorShape())
	shape.Register(StatusShape())
	shape.Register(SuccessShape())
}

//shape:shape

func StatusShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "Status",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/package_tags",
		Variant: []shape.Shape{
			SuccessShape(),
			ErrorShape(),
		},
	}
}

func SuccessShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Success",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/package_tags",
		Fields: []*shape.FieldLike{
			{
				Name: "Message",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Status",
			},
		},
	}
}

func ErrorShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Error",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/package_tags",
		Fields: []*shape.FieldLike{
			{
				Name: "Code",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "Message",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Status",
			},
		},
	}
}
