// Code generated by mkunion. DO NOT EDIT.
package state

import (
	"github.com/widmogrod/mkunion/x/machine"
	"github.com/widmogrod/mkunion/x/shared"
	"github.com/widmogrod/mkunion/x/storage/schemaless"
	"testing"
	"time"
)

func init() {
	shared.TypeRegistryStore[machine.Case[Dependency, Command, State]]("github.com/widmogrod/mkunion/x/machine.Case[github.com/widmogrod/mkunion/example/state.Dependency,github.com/widmogrod/mkunion/example/state.Command,github.com/widmogrod/mkunion/example/state.State]")
	shared.TypeRegistryStore[machine.Machine[Dependency, Command, State]]("github.com/widmogrod/mkunion/x/machine.Machine[github.com/widmogrod/mkunion/example/state.Dependency,github.com/widmogrod/mkunion/example/state.Command,github.com/widmogrod/mkunion/example/state.State]")
	shared.TypeRegistryStore[schemaless.FindingRecords[schemaless.Record[State]]]("github.com/widmogrod/mkunion/x/storage/schemaless.FindingRecords[Record[github.com/widmogrod/mkunion/example/state.State]]")
	shared.TypeRegistryStore[schemaless.Record[State]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/example/state.State]")
	shared.TypeRegistryStore[CancelOrderCMD]("github.com/widmogrod/mkunion/example/state.CancelOrderCMD")
	shared.TypeRegistryStore[CreateOrderCMD]("github.com/widmogrod/mkunion/example/state.CreateOrderCMD")
	shared.TypeRegistryStore[DependencyMock]("github.com/widmogrod/mkunion/example/state.DependencyMock")
	shared.TypeRegistryStore[MarkAsProcessingCMD]("github.com/widmogrod/mkunion/example/state.MarkAsProcessingCMD")
	shared.TypeRegistryStore[MarkOrderCompleteCMD]("github.com/widmogrod/mkunion/example/state.MarkOrderCompleteCMD")
	shared.TypeRegistryStore[OrderCancelled]("github.com/widmogrod/mkunion/example/state.OrderCancelled")
	shared.TypeRegistryStore[OrderCompleted]("github.com/widmogrod/mkunion/example/state.OrderCompleted")
	shared.TypeRegistryStore[OrderError]("github.com/widmogrod/mkunion/example/state.OrderError")
	shared.TypeRegistryStore[OrderPending]("github.com/widmogrod/mkunion/example/state.OrderPending")
	shared.TypeRegistryStore[OrderProcessing]("github.com/widmogrod/mkunion/example/state.OrderProcessing")
	shared.TypeRegistryStore[TryRecoverErrorCMD]("github.com/widmogrod/mkunion/example/state.TryRecoverErrorCMD")
	shared.TypeRegistryStore[testing.T]("testing.T")
	shared.TypeRegistryStore[time.Time]("time.Time")
}
