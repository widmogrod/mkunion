// Code generated by mkunion. DO NOT EDIT.
package main

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(CompletedShape())
	shape.Register(FailedShape())
	shape.Register(PendingShape())
	shape.Register(RunningShape())
	shape.Register(TaskStatusShape())
}

//shape:shape

func TaskStatusShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "TaskStatus",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/runtime_package_tags",
		Variant: []shape.Shape{
			PendingShape(),
			RunningShape(),
			CompletedShape(),
			FailedShape(),
		},
	}
}

func PendingShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Pending",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/runtime_package_tags",
		Fields: []*shape.FieldLike{
			{
				Name: "ID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "TaskStatus",
			},
		},
	}
}

func RunningShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Running",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/runtime_package_tags",
		Fields: []*shape.FieldLike{
			{
				Name: "ID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Progress",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "TaskStatus",
			},
		},
	}
}

func CompletedShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Completed",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/runtime_package_tags",
		Fields: []*shape.FieldLike{
			{
				Name: "ID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Result",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "TaskStatus",
			},
		},
	}
}

func FailedShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Failed",
		PkgName:       "main",
		PkgImportName: "github.com/widmogrod/mkunion/example/runtime_package_tags",
		Fields: []*shape.FieldLike{
			{
				Name: "ID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Error",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "TaskStatus",
			},
		},
	}
}
