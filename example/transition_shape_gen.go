// Code generated by mkunion. DO NOT EDIT.
package example

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(CommandShape())
	shape.Register(CompleteCommandShape())
	shape.Register(CompleteShape())
	shape.Register(InitialShape())
	shape.Register(ProcessingShape())
	shape.Register(StartCommandShape())
	shape.Register(StateShape())
}

//shape:shape

func CommandShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "Command",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Variant: []shape.Shape{
			StartCommandShape(),
			CompleteCommandShape(),
		},
	}
}

func StartCommandShape() shape.Shape {
	return &shape.StructLike{
		Name:          "StartCommand",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Fields: []*shape.FieldLike{
			{
				Name: "ID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func CompleteCommandShape() shape.Shape {
	return &shape.StructLike{
		Name:          "CompleteCommand",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Fields: []*shape.FieldLike{
			{
				Name: "Result",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

//shape:shape

func StateShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "State",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Variant: []shape.Shape{
			InitialShape(),
			ProcessingShape(),
			CompleteShape(),
		},
	}
}

func InitialShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Initial",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func ProcessingShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Processing",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Fields: []*shape.FieldLike{
			{
				Name: "ID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func CompleteShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Complete",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Fields: []*shape.FieldLike{
			{
				Name: "Result",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}
