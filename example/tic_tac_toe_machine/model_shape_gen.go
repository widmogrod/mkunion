// Code generated by mkunion. DO NOT EDIT.
package tictacstatemachine

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(CommandShape())
	shape.Register(CreateGameCMDShape())
	shape.Register(GameEndWithDrawShape())
	shape.Register(GameEndWithWinShape())
	shape.Register(GameProgressShape())
	shape.Register(GameWaitingForPlayerShape())
	shape.Register(GiveUpCMDShape())
	shape.Register(JoinGameCMDShape())
	shape.Register(MoveCMDShape())
	shape.Register(MoveShape())
	shape.Register(PlayerIDShape())
	shape.Register(StartGameCMDShape())
	shape.Register(StateShape())
	shape.Register(TicTacToeBaseStateShape())
}

//shape:shape

func CommandShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "Command",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Variant: []shape.Shape{
			CreateGameCMDShape(),
			JoinGameCMDShape(),
			StartGameCMDShape(),
			MoveCMDShape(),
			GiveUpCMDShape(),
		},
	}
}

func CreateGameCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "CreateGameCMD",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "FirstPlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "BoardRows",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "BoardCols",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "WinningLength",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func JoinGameCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "JoinGameCMD",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "SecondPlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func StartGameCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "StartGameCMD",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "FirstPlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "SecondPlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "BoardRows",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "BoardCols",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "WinningLength",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func MoveCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "MoveCMD",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "PlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "Position",
				Type: &shape.RefName{
					Name:          "Move",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

func GiveUpCMDShape() shape.Shape {
	return &shape.StructLike{
		Name:          "GiveUpCMD",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "PlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Command",
			},
		},
	}
}

//shape:shape
func PlayerIDShape() shape.Shape {
	return &shape.AliasLike{
		Name:          "PlayerID",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		IsAlias:       true,
		Type:          &shape.PrimitiveLike{Kind: &shape.StringLike{}},
	}
}

//shape:shape
func MoveShape() shape.Shape {
	return &shape.AliasLike{
		Name:          "Move",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		IsAlias:       true,
		Type:          &shape.PrimitiveLike{Kind: &shape.StringLike{}},
	}
}

//shape:shape

func StateShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "State",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Variant: []shape.Shape{
			GameWaitingForPlayerShape(),
			GameProgressShape(),
			GameEndWithWinShape(),
			GameEndWithDrawShape(),
		},
	}
}

func GameWaitingForPlayerShape() shape.Shape {
	return &shape.StructLike{
		Name:          "GameWaitingForPlayer",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "TicTacToeBaseState",
				Type: &shape.RefName{
					Name:          "TicTacToeBaseState",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func GameProgressShape() shape.Shape {
	return &shape.StructLike{
		Name:          "GameProgress",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "TicTacToeBaseState",
				Type: &shape.RefName{
					Name:          "TicTacToeBaseState",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "NextMovePlayerID",
				Type: &shape.RefName{
					Name:          "Move",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "MovesTaken",
				Type: &shape.MapLike{
					Key: &shape.RefName{
						Name:          "Move",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
					Val: &shape.RefName{
						Name:          "PlayerID",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
				},
			},
			{
				Name: "MovesOrder",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "Move",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func GameEndWithWinShape() shape.Shape {
	return &shape.StructLike{
		Name:          "GameEndWithWin",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "TicTacToeBaseState",
				Type: &shape.RefName{
					Name:          "TicTacToeBaseState",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "Winner",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "WiningSequence",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "Move",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
				},
			},
			{
				Name: "MovesTaken",
				Type: &shape.MapLike{
					Key: &shape.RefName{
						Name:          "Move",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
					Val: &shape.RefName{
						Name:          "PlayerID",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

func GameEndWithDrawShape() shape.Shape {
	return &shape.StructLike{
		Name:          "GameEndWithDraw",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "TicTacToeBaseState",
				Type: &shape.RefName{
					Name:          "TicTacToeBaseState",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "MovesTaken",
				Type: &shape.MapLike{
					Key: &shape.RefName{
						Name:          "Move",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
					Val: &shape.RefName{
						Name:          "PlayerID",
						PkgName:       "tictacstatemachine",
						PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "State",
			},
		},
	}
}

//shape:shape
func TicTacToeBaseStateShape() shape.Shape {
	return &shape.StructLike{
		Name:          "TicTacToeBaseState",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "FirstPlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "SecondPlayerID",
				Type: &shape.RefName{
					Name:          "PlayerID",
					PkgName:       "tictacstatemachine",
					PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
				},
			},
			{
				Name: "BoardRows",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "BoardCols",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "WinningLength",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
		},
	}
}
