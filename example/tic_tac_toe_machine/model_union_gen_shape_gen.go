// Code generated by mkunion. DO NOT EDIT.
package tictacstatemachine

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(CommandUnionJSONShape())
	shape.Register(StateUnionJSONShape())
}

//shape:shape
func CommandUnionJSONShape() shape.Shape {
	return &shape.StructLike{
		Name:          "CommandUnionJSON",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "Type",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "$type",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "CreateGameCMD",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.CreateGameCMD",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "JoinGameCMD",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.JoinGameCMD",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "StartGameCMD",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.StartGameCMD",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "MoveCMD",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.MoveCMD",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "GiveUpCMD",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.GiveUpCMD",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
		},
	}
}

//shape:shape
func StateUnionJSONShape() shape.Shape {
	return &shape.StructLike{
		Name:          "StateUnionJSON",
		PkgName:       "tictacstatemachine",
		PkgImportName: "github.com/widmogrod/mkunion/example/tic_tac_toe_machine",
		Fields: []*shape.FieldLike{
			{
				Name: "Type",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "$type",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "GameWaitingForPlayer",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.GameWaitingForPlayer",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "GameProgress",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.GameProgress",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "GameEndWithWin",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.GameEndWithWin",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "GameEndWithDraw",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "tictacstatemachine.GameEndWithDraw",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
		},
	}
}
