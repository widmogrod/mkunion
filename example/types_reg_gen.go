// Code generated by mkunion. DO NOT EDIT.
package example

import (
	"github.com/widmogrod/mkunion/f"
	"github.com/widmogrod/mkunion/x/shared"
	"testing"
)

func init() {
	shared.TypeRegistryStore[any]("any")
	shared.TypeRegistryStore[AnyTime[any]]("github.com/widmogrod/mkunion/example.AnyTime[any]")
	shared.TypeRegistryStore[AnyTime[Hours]]("github.com/widmogrod/mkunion/example.AnyTime[github.com/widmogrod/mkunion/example.Hours]")
	shared.TypeRegistryStore[AnyTime[Seconds]]("github.com/widmogrod/mkunion/example.AnyTime[github.com/widmogrod/mkunion/example.Seconds]")
	shared.TypeRegistryStore[Branch[any]]("github.com/widmogrod/mkunion/example.Branch[any]")
	shared.TypeRegistryStore[Branch[int]]("github.com/widmogrod/mkunion/example.Branch[int]")
	shared.TypeRegistryStore[Branch[string]]("github.com/widmogrod/mkunion/example.Branch[string]")
	shared.TypeRegistryStore[Circle]("github.com/widmogrod/mkunion/example.Circle")
	shared.TypeRegistryStore[Complete]("github.com/widmogrod/mkunion/example.Complete")
	shared.TypeRegistryStore[CompleteCommand]("github.com/widmogrod/mkunion/example.CompleteCommand")
	shared.TypeRegistryStore[Connected[any]]("github.com/widmogrod/mkunion/example.Connected[any]")
	shared.TypeRegistryStore[Connected[Closed]]("github.com/widmogrod/mkunion/example.Connected[github.com/widmogrod/mkunion/example.Closed]")
	shared.TypeRegistryStore[Connected[Open]]("github.com/widmogrod/mkunion/example.Connected[github.com/widmogrod/mkunion/example.Open]")
	shared.TypeRegistryStore[Connecting[any]]("github.com/widmogrod/mkunion/example.Connecting[any]")
	shared.TypeRegistryStore[Connecting[Closed]]("github.com/widmogrod/mkunion/example.Connecting[github.com/widmogrod/mkunion/example.Closed]")
	shared.TypeRegistryStore[Connecting[Open]]("github.com/widmogrod/mkunion/example.Connecting[github.com/widmogrod/mkunion/example.Open]")
	shared.TypeRegistryStore[Connection[any]]("github.com/widmogrod/mkunion/example.Connection[any]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example.Connection[any]", ConnectionFromJSON[any], ConnectionToJSON[any])
	shared.TypeRegistryStore[Connection[Closed]]("github.com/widmogrod/mkunion/example.Connection[github.com/widmogrod/mkunion/example.Closed]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example.Connection[github.com/widmogrod/mkunion/example.Closed]", ConnectionFromJSON[Closed], ConnectionToJSON[Closed])
	shared.TypeRegistryStore[Disconnected[any]]("github.com/widmogrod/mkunion/example.Disconnected[any]")
	shared.TypeRegistryStore[Disconnected[Closed]]("github.com/widmogrod/mkunion/example.Disconnected[github.com/widmogrod/mkunion/example.Closed]")
	shared.TypeRegistryStore[Disconnected[Open]]("github.com/widmogrod/mkunion/example.Disconnected[github.com/widmogrod/mkunion/example.Open]")
	shared.TypeRegistryStore[Distance[any]]("github.com/widmogrod/mkunion/example.Distance[any]")
	shared.TypeRegistryStore[Distance[Feet]]("github.com/widmogrod/mkunion/example.Distance[github.com/widmogrod/mkunion/example.Feet]")
	shared.TypeRegistryStore[Distance[MetersPerSecond]]("github.com/widmogrod/mkunion/example.Distance[github.com/widmogrod/mkunion/example.MetersPerSecond]")
	shared.TypeRegistryStore[Distance[Meters]]("github.com/widmogrod/mkunion/example.Distance[github.com/widmogrod/mkunion/example.Meters]")
	shared.TypeRegistryStore[Initial]("github.com/widmogrod/mkunion/example.Initial")
	shared.TypeRegistryStore[Leaf[any]]("github.com/widmogrod/mkunion/example.Leaf[any]")
	shared.TypeRegistryStore[Leaf[int]]("github.com/widmogrod/mkunion/example.Leaf[int]")
	shared.TypeRegistryStore[Leaf[string]]("github.com/widmogrod/mkunion/example.Leaf[string]")
	shared.TypeRegistryStore[Lit]("github.com/widmogrod/mkunion/example.Lit")
	shared.TypeRegistryStore[Measurement[any]]("github.com/widmogrod/mkunion/example.Measurement[any]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example.Measurement[any]", MeasurementFromJSON[any], MeasurementToJSON[any])
	shared.TypeRegistryStore[Mul]("github.com/widmogrod/mkunion/example.Mul")
	shared.TypeRegistryStore[One]("github.com/widmogrod/mkunion/example.One")
	shared.TypeRegistryStore[PositiveTime[any]]("github.com/widmogrod/mkunion/example.PositiveTime[any]")
	shared.TypeRegistryStore[PositiveTime[Hours]]("github.com/widmogrod/mkunion/example.PositiveTime[github.com/widmogrod/mkunion/example.Hours]")
	shared.TypeRegistryStore[PositiveTime[Seconds]]("github.com/widmogrod/mkunion/example.PositiveTime[github.com/widmogrod/mkunion/example.Seconds]")
	shared.TypeRegistryStore[Processing]("github.com/widmogrod/mkunion/example.Processing")
	shared.TypeRegistryStore[Rectangle]("github.com/widmogrod/mkunion/example.Rectangle")
	shared.TypeRegistryStore[Speed[any]]("github.com/widmogrod/mkunion/example.Speed[any]")
	shared.TypeRegistryStore[Speed[Feet]]("github.com/widmogrod/mkunion/example.Speed[github.com/widmogrod/mkunion/example.Feet]")
	shared.TypeRegistryStore[Speed[MetersPerSecond]]("github.com/widmogrod/mkunion/example.Speed[github.com/widmogrod/mkunion/example.MetersPerSecond]")
	shared.TypeRegistryStore[Speed[Meters]]("github.com/widmogrod/mkunion/example.Speed[github.com/widmogrod/mkunion/example.Meters]")
	shared.TypeRegistryStore[Square]("github.com/widmogrod/mkunion/example.Square")
	shared.TypeRegistryStore[StartCommand]("github.com/widmogrod/mkunion/example.StartCommand")
	shared.TypeRegistryStore[Sum]("github.com/widmogrod/mkunion/example.Sum")
	shared.TypeRegistryStore[Time[any]]("github.com/widmogrod/mkunion/example.Time[any]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example.Time[any]", TimeFromJSON[any], TimeToJSON[any])
	shared.TypeRegistryStore[Time[Seconds]]("github.com/widmogrod/mkunion/example.Time[github.com/widmogrod/mkunion/example.Seconds]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example.Time[github.com/widmogrod/mkunion/example.Seconds]", TimeFromJSON[Seconds], TimeToJSON[Seconds])
	shared.TypeRegistryStore[TreeVisitor[int]]("github.com/widmogrod/mkunion/example.TreeVisitor[int]")
	shared.TypeRegistryStore[Tree[any]]("github.com/widmogrod/mkunion/example.Tree[any]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example.Tree[any]", TreeFromJSON[any], TreeToJSON[any])
	shared.TypeRegistryStore[Tree[int]]("github.com/widmogrod/mkunion/example.Tree[int]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/example.Tree[int]", TreeFromJSON[int], TreeToJSON[int])
	shared.TypeRegistryStore[f.Err[User, string]]("github.com/widmogrod/mkunion/f.Err[github.com/widmogrod/mkunion/example.User,string]")
	shared.TypeRegistryStore[f.Err[f.Option[User], APIError]]("github.com/widmogrod/mkunion/f.Err[github.com/widmogrod/mkunion/f.Option[github.com/widmogrod/mkunion/example.User],github.com/widmogrod/mkunion/example.APIError]")
	shared.TypeRegistryStore[f.None[User]]("github.com/widmogrod/mkunion/f.None[github.com/widmogrod/mkunion/example.User]")
	shared.TypeRegistryStore[f.Ok[User, string]]("github.com/widmogrod/mkunion/f.Ok[github.com/widmogrod/mkunion/example.User,string]")
	shared.TypeRegistryStore[f.Ok[f.Option[User], APIError]]("github.com/widmogrod/mkunion/f.Ok[github.com/widmogrod/mkunion/f.Option[github.com/widmogrod/mkunion/example.User],github.com/widmogrod/mkunion/example.APIError]")
	shared.TypeRegistryStore[f.Option[User]]("github.com/widmogrod/mkunion/f.Option[github.com/widmogrod/mkunion/example.User]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/f.Option[github.com/widmogrod/mkunion/example.User]", f.OptionFromJSON[User], f.OptionToJSON[User])
	shared.TypeRegistryStore[f.Result[User, string]]("github.com/widmogrod/mkunion/f.Result[github.com/widmogrod/mkunion/example.User,string]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/f.Result[github.com/widmogrod/mkunion/example.User,string]", f.ResultFromJSON[User, string], f.ResultToJSON[User, string])
	shared.TypeRegistryStore[f.Result[f.Option[User], APIError]]("github.com/widmogrod/mkunion/f.Result[github.com/widmogrod/mkunion/f.Option[github.com/widmogrod/mkunion/example.User],github.com/widmogrod/mkunion/example.APIError]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/f.Result[github.com/widmogrod/mkunion/f.Option[github.com/widmogrod/mkunion/example.User],github.com/widmogrod/mkunion/example.APIError]", f.ResultFromJSON[f.Option[User], APIError], f.ResultToJSON[f.Option[User], APIError])
	shared.TypeRegistryStore[f.Some[User]]("github.com/widmogrod/mkunion/f.Some[github.com/widmogrod/mkunion/example.User]")
	shared.TypeRegistryStore[testing.B]("testing.B")
	shared.TypeRegistryStore[testing.T]("testing.T")
}
