// Code generated by mkunion. DO NOT EDIT.
package example

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(BoatShape())
	shape.Register(CarShape())
	shape.Register(PlaneShape())
	shape.Register(VehicleShape())
}

//shape:shape

func VehicleShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "Vehicle",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Variant: []shape.Shape{
			CarShape(),
			PlaneShape(),
			BoatShape(),
		},
	}
}

func CarShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Car",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Fields: []*shape.FieldLike{
			{
				Name: "Color",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Wheels",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Vehicle",
			},
		},
	}
}

func PlaneShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Plane",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Fields: []*shape.FieldLike{
			{
				Name: "Color",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Engines",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Vehicle",
			},
		},
	}
}

func BoatShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Boat",
		PkgName:       "example",
		PkgImportName: "github.com/widmogrod/mkunion/example",
		Fields: []*shape.FieldLike{
			{
				Name: "Color",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Propellers",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Vehicle",
			},
		},
	}
}
