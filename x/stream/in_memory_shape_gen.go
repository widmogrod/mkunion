// Code generated by mkunion. DO NOT EDIT.
package stream

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(InMemoryStreamShape())
	shape.Register(SimulateProblemShape())
}

//shape:shape
func InMemoryStreamShape() shape.Shape {
	return &shape.StructLike{
		Name:          "InMemoryStream",
		PkgName:       "stream",
		PkgImportName: "github.com/widmogrod/mkunion/x/stream",
		TypeParams: []shape.TypeParam{
			shape.TypeParam{
				Name: "A",
				Type: &shape.Any{},
			},
		},
	}
}

//shape:shape
func SimulateProblemShape() shape.Shape {
	return &shape.StructLike{
		Name:          "SimulateProblem",
		PkgName:       "stream",
		PkgImportName: "github.com/widmogrod/mkunion/x/stream",
		Fields: []*shape.FieldLike{
			{
				Name: "ErrorOnPullProbability",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
			},
			{
				Name: "ErrorOnPull",
				Type: &shape.Any{},
			},
			{
				Name: "ErrorOnPushProbability",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
			},
			{
				Name: "ErrorOnPush",
				Type: &shape.Any{},
			},
		},
	}
}
