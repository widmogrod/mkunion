// Code generated by mkunion. DO NOT EDIT.
package testutils

import (
	"github.com/widmogrod/mkunion/x/shared"
	"testing"
	"time"
)

func init() {
	shared.TypeRegistryStore[int64]("int64")
	shared.TypeRegistryStore[testing.T]("testing.T")
	shared.TypeRegistryStore[A1]("github.com/widmogrod/mkunion/x/generators/testutils.A1")
	shared.TypeRegistryStore[B2]("github.com/widmogrod/mkunion/x/generators/testutils.B2")
	shared.TypeRegistryStore[Branch]("github.com/widmogrod/mkunion/x/generators/testutils.Branch")
	shared.TypeRegistryStore[C3]("github.com/widmogrod/mkunion/x/generators/testutils.C3")
	shared.TypeRegistryStore[Item[any]]("github.com/widmogrod/mkunion/x/generators/testutils.Item[any]")
	shared.TypeRegistryStore[Item[float64]]("github.com/widmogrod/mkunion/x/generators/testutils.Item[float64]")
	shared.TypeRegistryStore[Item[int]]("github.com/widmogrod/mkunion/x/generators/testutils.Item[int]")
	shared.TypeRegistryStore[K]("github.com/widmogrod/mkunion/x/generators/testutils.K")
	shared.TypeRegistryStore[Ka]("github.com/widmogrod/mkunion/x/generators/testutils.Ka")
	shared.TypeRegistryStore[La]("github.com/widmogrod/mkunion/x/generators/testutils.La")
	shared.TypeRegistryStore[Leaf]("github.com/widmogrod/mkunion/x/generators/testutils.Leaf")
	shared.TypeRegistryStore[Leaf2]("github.com/widmogrod/mkunion/x/generators/testutils.Leaf2")
	shared.TypeRegistryStore[ListOf2[ListOf[any], *ListOf2[int64, *time.Duration]]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf2[ListOf[any],*ListOf2[int64,*time.Duration]]")
	shared.TypeRegistryStore[ListOf2[Tree, ListOf[string]]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf2[Tree,ListOf[string]]")
	shared.TypeRegistryStore[ListOf2[string, int]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf2[string,int]")
	shared.TypeRegistryStore[ListOf[ListOf[string]]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf[ListOf[string]]")
	shared.TypeRegistryStore[ListOf[Tree]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf[Tree]")
	shared.TypeRegistryStore[ListOf[any]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf[any]")
	shared.TypeRegistryStore[ListOf[int]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf[int]")
	shared.TypeRegistryStore[ListOf[string]]("github.com/widmogrod/mkunion/x/generators/testutils.ListOf[string]")
	shared.TypeRegistryStore[Ma]("github.com/widmogrod/mkunion/x/generators/testutils.Ma")
	shared.TypeRegistryStore[N0]("github.com/widmogrod/mkunion/x/generators/testutils.N0")
	shared.TypeRegistryStore[N1]("github.com/widmogrod/mkunion/x/generators/testutils.N1")
	shared.TypeRegistryStore[Other[any]]("github.com/widmogrod/mkunion/x/generators/testutils.Other[any]")
	shared.TypeRegistryStore[Other[float64]]("github.com/widmogrod/mkunion/x/generators/testutils.Other[float64]")
	shared.TypeRegistryStore[Other[int]]("github.com/widmogrod/mkunion/x/generators/testutils.Other[int]")
	shared.TypeRegistryStore[P]("github.com/widmogrod/mkunion/x/generators/testutils.P")
	shared.TypeRegistryStore[Record[any]]("github.com/widmogrod/mkunion/x/generators/testutils.Record[any]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/x/generators/testutils.Record[any]", RecordFromJSON[any], RecordToJSON[any])
	shared.TypeRegistryStore[Record[float64]]("github.com/widmogrod/mkunion/x/generators/testutils.Record[float64]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/x/generators/testutils.Record[float64]", RecordFromJSON[float64], RecordToJSON[float64])
	shared.TypeRegistryStore[Record[int]]("github.com/widmogrod/mkunion/x/generators/testutils.Record[int]")
	shared.JSONMarshallerRegister("github.com/widmogrod/mkunion/x/generators/testutils.Record[int]", RecordFromJSON[int], RecordToJSON[int])
	shared.TypeRegistryStore[Tree2]("github.com/widmogrod/mkunion/x/generators/testutils.Tree2")
	shared.TypeRegistryStore[time.Duration]("time.Duration")
}
