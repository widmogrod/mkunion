// Code generated by mkunion. DO NOT EDIT.
package testutils

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(AlphabetUnionJSONShape())
	shape.Register(NumberUnionJSONShape())
}

//shape:shape
func AlphabetUnionJSONShape() shape.Shape {
	return &shape.StructLike{
		Name:          "AlphabetUnionJSON",
		PkgName:       "testutils",
		PkgImportName: "github.com/widmogrod/mkunion/x/generators/testutils",
		Fields: []*shape.FieldLike{
			{
				Name: "Type",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "$type",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "A1",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "testutils.A1",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "B2",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "testutils.B2",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "C3",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "testutils.C3",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
		},
	}
}

//shape:shape
func NumberUnionJSONShape() shape.Shape {
	return &shape.StructLike{
		Name:          "NumberUnionJSON",
		PkgName:       "testutils",
		PkgImportName: "github.com/widmogrod/mkunion/x/generators/testutils",
		Fields: []*shape.FieldLike{
			{
				Name: "Type",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "$type",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "N0",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "testutils.N0",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
			{
				Name: "N1",
				Type: &shape.RefName{
					Name:          "RawMessage",
					PkgName:       "json",
					PkgImportName: "encoding/json",
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "testutils.N1",
						Options: []string{
							"omitempty",
						},
					},
				},
			},
		},
	}
}
