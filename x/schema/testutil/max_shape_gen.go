// Code generated by mkunion. DO NOT EDIT.
package testutil

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(MaxShape())
}

//shape:shape
func MaxShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Max",
		PkgName:       "testutil",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema/testutil",
		Fields: []*shape.FieldLike{
			{
				Name: "Int",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
			{
				Name: "Int8",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int8{},
					},
				},
			},
			{
				Name: "Int16",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int16{},
					},
				},
			},
			{
				Name: "Int32",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int32{},
					},
				},
			},
			{
				Name: "Int64",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int64{},
					},
				},
			},
			{
				Name: "Float32",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float32{},
					},
				},
			},
			{
				Name: "Float64",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Float64{},
					},
				},
			},
			{
				Name: "Uint",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.UInt{},
					},
				},
			},
			{
				Name: "Uint8",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.UInt8{},
					},
				},
			},
			{
				Name: "Uint16",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.UInt16{},
					},
				},
			},
			{
				Name: "Uint32",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.UInt32{},
					},
				},
			},
			{
				Name: "Uint64",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.UInt64{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"serde": {
				Value: "json",
			},
		},
	}
}
