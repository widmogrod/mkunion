// Code generated by mkunion. DO NOT EDIT.
package schema

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(AccShape())
	shape.Register(PartShape())
	shape.Register(PathAstShape())
}

//shape:shape
func AccShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Acc",
		PkgName:       "schema",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema",
		Fields: []*shape.FieldLike{
			{
				Name: "Name",
				Type: &shape.PointerLike{
					Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
			},
			{
				Name: "Index",
				Type: &shape.PointerLike{
					Type: &shape.PrimitiveLike{
						Kind: &shape.NumberLike{
							Kind: &shape.Int{},
						},
					},
				},
			},
			{
				Name: "Any",
				Type: &shape.PrimitiveLike{Kind: &shape.BooleanLike{}},
			},
		},
	}
}

//shape:shape
func PartShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Part",
		PkgName:       "schema",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema",
		Fields: []*shape.FieldLike{
			{
				Name: "Location",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Acc",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "Acc",
						PkgName:       "schema",
						PkgImportName: "github.com/widmogrod/mkunion/x/schema",
					},
				},
			},
		},
	}
}

//shape:shape
func PathAstShape() shape.Shape {
	return &shape.StructLike{
		Name:          "PathAst",
		PkgName:       "schema",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema",
		Fields: []*shape.FieldLike{
			{
				Name: "Parts",
				Type: &shape.ListLike{
					Element: &shape.RefName{
						Name:          "Part",
						PkgName:       "schema",
						PkgImportName: "github.com/widmogrod/mkunion/x/schema",
					},
				},
			},
		},
	}
}
