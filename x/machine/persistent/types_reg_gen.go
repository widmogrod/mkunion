// Code generated by mkunion. DO NOT EDIT.
package persistent

import (
	"github.com/widmogrod/mkunion/x/shared"
	"github.com/widmogrod/mkunion/x/storage/predicate"
	"github.com/widmogrod/mkunion/x/storage/schemaless"
	"github.com/widmogrod/mkunion/x/storage/schemaless/typedful"
	"testing"
)

func init() {
	shared.TypeRegistryStore[CreateTestCommand]("github.com/widmogrod/mkunion/x/machine/persistent.CreateTestCommand")
	shared.TypeRegistryStore[DeleteTestCommand]("github.com/widmogrod/mkunion/x/machine/persistent.DeleteTestCommand")
	shared.TypeRegistryStore[TestActiveState]("github.com/widmogrod/mkunion/x/machine/persistent.TestActiveState")
	shared.TypeRegistryStore[TestDeletedState]("github.com/widmogrod/mkunion/x/machine/persistent.TestDeletedState")
	shared.TypeRegistryStore[TestInitialState]("github.com/widmogrod/mkunion/x/machine/persistent.TestInitialState")
	shared.TypeRegistryStore[UpdateTestCommand]("github.com/widmogrod/mkunion/x/machine/persistent.UpdateTestCommand")
	shared.TypeRegistryStore[predicate.WherePredicates]("github.com/widmogrod/mkunion/x/storage/predicate.WherePredicates")
	shared.TypeRegistryStore[schemaless.Aggregator[TestState, any]]("github.com/widmogrod/mkunion/x/storage/schemaless.Aggregator[github.com/widmogrod/mkunion/x/machine/persistent.TestState,any]")
	shared.TypeRegistryStore[testing.T]("testing.T")
	shared.TypeRegistryStore[typedful.TypedRepoWithAggregator[TestState, any]]("github.com/widmogrod/mkunion/x/storage/schemaless/typedful.TypedRepoWithAggregator[github.com/widmogrod/mkunion/x/machine/persistent.TestState,any]")
}
