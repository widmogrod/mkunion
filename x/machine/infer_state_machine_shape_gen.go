// Code generated by mkunion. DO NOT EDIT.
package machine

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(InferTransitionShape())
	shape.Register(transitionShape())
}

//shape:shape
func InferTransitionShape() shape.Shape {
	return &shape.StructLike{
		Name:          "InferTransition",
		PkgName:       "machine",
		PkgImportName: "github.com/widmogrod/mkunion/x/machine",
		TypeParams: []shape.TypeParam{
			shape.TypeParam{
				Name: "Transition",
				Type: &shape.Any{},
			},
			shape.TypeParam{
				Name: "State",
				Type: &shape.Any{},
			},
		},
	}
}

//shape:shape
func transitionShape() shape.Shape {
	return &shape.AliasLike{
		Name:          "transition",
		PkgName:       "machine",
		PkgImportName: "github.com/widmogrod/mkunion/x/machine",
		Type: &shape.ListLike{
			Element:  &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			ArrayLen: shape.Ptr(4),
		},
	}
}
