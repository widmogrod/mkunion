// Code generated by mkunion. DO NOT EDIT.
package typedful

import (
	"github.com/widmogrod/mkunion/x/schema"
	"github.com/widmogrod/mkunion/x/shared"
	"github.com/widmogrod/mkunion/x/storage/predicate"
	"github.com/widmogrod/mkunion/x/storage/schemaless"
	"testing"
)

func init() {
	shared.TypeRegistryStore[predicate.And]("github.com/widmogrod/mkunion/x/storage/predicate.And")
	shared.TypeRegistryStore[predicate.BindValue]("github.com/widmogrod/mkunion/x/storage/predicate.BindValue")
	shared.TypeRegistryStore[predicate.Compare]("github.com/widmogrod/mkunion/x/storage/predicate.Compare")
	shared.TypeRegistryStore[predicate.Literal]("github.com/widmogrod/mkunion/x/storage/predicate.Literal")
	shared.TypeRegistryStore[predicate.Locatable]("github.com/widmogrod/mkunion/x/storage/predicate.Locatable")
	shared.TypeRegistryStore[predicate.Not]("github.com/widmogrod/mkunion/x/storage/predicate.Not")
	shared.TypeRegistryStore[predicate.Or]("github.com/widmogrod/mkunion/x/storage/predicate.Or")
	shared.TypeRegistryStore[predicate.WherePredicates]("github.com/widmogrod/mkunion/x/storage/predicate.WherePredicates")
	shared.TypeRegistryStore[schema.TypedLocation]("github.com/widmogrod/mkunion/x/schema.TypedLocation")
	shared.TypeRegistryStore[schemaless.Aggregator[User, UsersCountByAge]]("github.com/widmogrod/mkunion/x/storage/schemaless.Aggregator[github.com/widmogrod/mkunion/x/storage/schemaless/typedful.User,github.com/widmogrod/mkunion/x/storage/schemaless/typedful.UsersCountByAge]")
	shared.TypeRegistryStore[schemaless.AppendLoger[any]]("github.com/widmogrod/mkunion/x/storage/schemaless.AppendLoger[any]")
	shared.TypeRegistryStore[schemaless.AppendLoger[schema.Schema]]("github.com/widmogrod/mkunion/x/storage/schemaless.AppendLoger[github.com/widmogrod/mkunion/x/schema.Schema]")
	shared.TypeRegistryStore[schemaless.Change[schema.Schema]]("github.com/widmogrod/mkunion/x/storage/schemaless.Change[github.com/widmogrod/mkunion/x/schema.Schema]")
	shared.TypeRegistryStore[schemaless.FindingRecords[schemaless.Record[schema.Schema]]]("github.com/widmogrod/mkunion/x/storage/schemaless.FindingRecords[Record[github.com/widmogrod/mkunion/x/schema.Schema]]")
	shared.TypeRegistryStore[schemaless.FindingRecords[schemaless.Record[User]]]("github.com/widmogrod/mkunion/x/storage/schemaless.FindingRecords[Record[github.com/widmogrod/mkunion/x/storage/schemaless/typedful.User]]")
	shared.TypeRegistryStore[schemaless.FindingRecords[schemaless.Record[UsersCountByAge]]]("github.com/widmogrod/mkunion/x/storage/schemaless.FindingRecords[Record[github.com/widmogrod/mkunion/x/storage/schemaless/typedful.UsersCountByAge]]")
	shared.TypeRegistryStore[schemaless.Record[schema.Schema]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/schema.Schema]")
	shared.TypeRegistryStore[schemaless.Record[User]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/storage/schemaless/typedful.User]")
	shared.TypeRegistryStore[schemaless.Record[UsersCountByAge]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/storage/schemaless/typedful.UsersCountByAge]")
	shared.TypeRegistryStore[schemaless.Repository[any]]("github.com/widmogrod/mkunion/x/storage/schemaless.Repository[any]")
	shared.TypeRegistryStore[schemaless.Repository[schema.Schema]]("github.com/widmogrod/mkunion/x/storage/schemaless.Repository[github.com/widmogrod/mkunion/x/schema.Schema]")
	shared.TypeRegistryStore[schemaless.UpdateRecords[schemaless.Record[schema.Schema]]]("github.com/widmogrod/mkunion/x/storage/schemaless.UpdateRecords[Record[github.com/widmogrod/mkunion/x/schema.Schema]]")
	shared.TypeRegistryStore[schemaless.UpdateRecords[schemaless.Record[User]]]("github.com/widmogrod/mkunion/x/storage/schemaless.UpdateRecords[Record[github.com/widmogrod/mkunion/x/storage/schemaless/typedful.User]]")
	shared.TypeRegistryStore[testing.T]("testing.T")
	shared.TypeRegistryStore[TypedAppendLog[any]]("github.com/widmogrod/mkunion/x/storage/schemaless/typedful.TypedAppendLog[any]")
	shared.TypeRegistryStore[TypedRepoWithAggregator[any, any]]("github.com/widmogrod/mkunion/x/storage/schemaless/typedful.TypedRepoWithAggregator[any,any]")
}
