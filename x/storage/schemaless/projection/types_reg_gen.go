// Code generated by mkunion. DO NOT EDIT.
package projection

import (
	"container/list"
	"github.com/widmogrod/mkunion/x/schema"
	"github.com/widmogrod/mkunion/x/shared"
	"github.com/widmogrod/mkunion/x/storage/schemaless"
	"testing"
)

func init() {
	shared.TypeRegistryStore[any]("any")
	shared.TypeRegistryStore[bool]("bool")
	shared.TypeRegistryStore[list.Element]("container/list.Element")
	shared.TypeRegistryStore[Accumulate]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.Accumulate")
	shared.TypeRegistryStore[AccumulateDiscardRetractHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AccumulateDiscardRetractHandler")
	shared.TypeRegistryStore[AccumulatingAndRetracting]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AccumulatingAndRetracting")
	shared.TypeRegistryStore[AllOf]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AllOf")
	shared.TypeRegistryStore[AnyOf]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AnyOf")
	shared.TypeRegistryStore[AtPeriod]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AtPeriod")
	shared.TypeRegistryStore[AtPeriod1]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AtPeriod1")
	shared.TypeRegistryStore[AtWatermark]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AtWatermark")
	shared.TypeRegistryStore[AtWatermark1]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AtWatermark1")
	shared.TypeRegistryStore[AtWindowItemSize]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AtWindowItemSize")
	shared.TypeRegistryStore[AtWindowItemSize1]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AtWindowItemSize1")
	shared.TypeRegistryStore[AvgHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.AvgHandler")
	shared.TypeRegistryStore[BagOf[any]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.BagOf[any]")
	shared.TypeRegistryStore[CountHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.CountHandler")
	shared.TypeRegistryStore[DAGBuilder]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.DAGBuilder")
	shared.TypeRegistryStore[DebounceHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.DebounceHandler")
	shared.TypeRegistryStore[DefaultContext]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.DefaultContext")
	shared.TypeRegistryStore[Discard]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.Discard")
	shared.TypeRegistryStore[DoJoin]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.DoJoin")
	shared.TypeRegistryStore[DoLoad]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.DoLoad")
	shared.TypeRegistryStore[DoMap]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.DoMap")
	shared.TypeRegistryStore[DoWindow]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.DoWindow")
	shared.TypeRegistryStore[Dual]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.Dual")
	shared.TypeRegistryStore[ExecutionGroup]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.ExecutionGroup")
	shared.TypeRegistryStore[FilterHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.FilterHandler")
	shared.TypeRegistryStore[FixedWindow]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.FixedWindow")
	shared.TypeRegistryStore[Game]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.Game")
	shared.TypeRegistryStore[GenerateHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.GenerateHandler")
	shared.TypeRegistryStore[InMemoryTwoInterpreter]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.InMemoryTwoInterpreter")
	shared.TypeRegistryStore[Item]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.Item")
	shared.TypeRegistryStore[ItemGroupedByKey]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.ItemGroupedByKey")
	shared.TypeRegistryStore[ItemGroupedByWindow]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.ItemGroupedByWindow")
	shared.TypeRegistryStore[JoinHandler[any]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.JoinHandler[any]")
	shared.TypeRegistryStore[KeyedWindow]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.KeyedWindow")
	shared.TypeRegistryStore[ListAssert]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.ListAssert")
	shared.TypeRegistryStore[LogHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.LogHandler")
	shared.TypeRegistryStore[MapHandler[Game, SessionsStats]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.MapHandler[Game,SessionsStats]")
	shared.TypeRegistryStore[MapHandler[any, any]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.MapHandler[any,any]")
	shared.TypeRegistryStore[MergeHandler[SessionsStats]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.MergeHandler[SessionsStats]")
	shared.TypeRegistryStore[MergeHandler[any]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.MergeHandler[any]")
	shared.TypeRegistryStore[MergeHandler[int]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.MergeHandler[int]")
	shared.TypeRegistryStore[PubSubForInterpreter[any]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.PubSubForInterpreter[any]")
	shared.TypeRegistryStore[PubSubSingle]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.PubSubSingle")
	shared.TypeRegistryStore[PubSubSingler[Message]]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.PubSubSingler[Message]")
	shared.TypeRegistryStore[RepositorySink]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.RepositorySink")
	shared.TypeRegistryStore[SessionWindow]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.SessionWindow")
	shared.TypeRegistryStore[SessionsStats]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.SessionsStats")
	shared.TypeRegistryStore[SimpleProcessHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.SimpleProcessHandler")
	shared.TypeRegistryStore[SlidingWindow]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.SlidingWindow")
	shared.TypeRegistryStore[Tickers]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.Tickers")
	shared.TypeRegistryStore[TriggerHandler]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.TriggerHandler")
	shared.TypeRegistryStore[TriggerManager]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.TriggerManager")
	shared.TypeRegistryStore[TriggerState]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.TriggerState")
	shared.TypeRegistryStore[Window]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.Window")
	shared.TypeRegistryStore[WindowBuffer]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.WindowBuffer")
	shared.TypeRegistryStore[WindowTrigger]("github.com/widmogrod/mkunion/x/storage/schemaless/projection.WindowTrigger")
	shared.TypeRegistryStore[schema.Binary]("github.com/widmogrod/mkunion/x/schema.Binary")
	shared.TypeRegistryStore[schema.Bool]("github.com/widmogrod/mkunion/x/schema.Bool")
	shared.TypeRegistryStore[schema.List]("github.com/widmogrod/mkunion/x/schema.List")
	shared.TypeRegistryStore[schema.Map]("github.com/widmogrod/mkunion/x/schema.Map")
	shared.TypeRegistryStore[schema.None]("github.com/widmogrod/mkunion/x/schema.None")
	shared.TypeRegistryStore[schema.Number]("github.com/widmogrod/mkunion/x/schema.Number")
	shared.TypeRegistryStore[schema.String]("github.com/widmogrod/mkunion/x/schema.String")
	shared.TypeRegistryStore[schemaless.Record[schema.Schema]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/schema.Schema]")
	shared.TypeRegistryStore[schemaless.Repository[schema.Schema]]("github.com/widmogrod/mkunion/x/storage/schemaless.Repository[github.com/widmogrod/mkunion/x/schema.Schema]")
	shared.TypeRegistryStore[schemaless.UpdateRecords[schemaless.Record[schema.Schema]]]("github.com/widmogrod/mkunion/x/storage/schemaless.UpdateRecords[Record[github.com/widmogrod/mkunion/x/schema.Schema]]")
	shared.TypeRegistryStore[testing.T]("testing.T")
}
