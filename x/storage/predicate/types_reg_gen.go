// Code generated by mkunion. DO NOT EDIT.
package predicate

import (
	"github.com/widmogrod/mkunion/x/shared"
	"testing"
)

func init() {
	shared.TypeRegistryStore[And]("github.com/widmogrod/mkunion/x/storage/predicate.And")
	shared.TypeRegistryStore[BindValue]("github.com/widmogrod/mkunion/x/storage/predicate.BindValue")
	shared.TypeRegistryStore[Compare]("github.com/widmogrod/mkunion/x/storage/predicate.Compare")
	shared.TypeRegistryStore[Condition]("github.com/widmogrod/mkunion/x/storage/predicate.Condition")
	shared.TypeRegistryStore[Literal]("github.com/widmogrod/mkunion/x/storage/predicate.Literal")
	shared.TypeRegistryStore[Locatable]("github.com/widmogrod/mkunion/x/storage/predicate.Locatable")
	shared.TypeRegistryStore[Not]("github.com/widmogrod/mkunion/x/storage/predicate.Not")
	shared.TypeRegistryStore[Or]("github.com/widmogrod/mkunion/x/storage/predicate.Or")
	shared.TypeRegistryStore[OrCondition]("github.com/widmogrod/mkunion/x/storage/predicate.OrCondition")
	shared.TypeRegistryStore[ParamBinds]("github.com/widmogrod/mkunion/x/storage/predicate.ParamBinds")
	shared.TypeRegistryStore[WhereOpt]("github.com/widmogrod/mkunion/x/storage/predicate.WhereOpt")
	shared.TypeRegistryStore[WherePredicates]("github.com/widmogrod/mkunion/x/storage/predicate.WherePredicates")
	shared.TypeRegistryStore[testing.T]("testing.T")
}
