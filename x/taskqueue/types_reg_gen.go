// Code generated by mkunion. DO NOT EDIT.
package taskqueue

import (
	"github.com/aws/aws-sdk-go-v2/service/sqs"
	"github.com/widmogrod/mkunion/x/schema"
	"github.com/widmogrod/mkunion/x/shared"
	"github.com/widmogrod/mkunion/x/storage/schemaless"
	"github.com/widmogrod/mkunion/x/workflow"
	"testing"
)

func init() {
	shared.TypeRegistryStore[schemaless.Record[workflow.State]]("github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/workflow.State]")
	shared.TypeRegistryStore[sqs.Client]("github.com/aws/aws-sdk-go-v2/service/sqs.Client")
	shared.TypeRegistryStore[string]("string")
	shared.TypeRegistryStore[Description]("github.com/widmogrod/mkunion/x/taskqueue.Description")
	shared.TypeRegistryStore[FunctionProcessor[schemaless.Record[workflow.State]]]("github.com/widmogrod/mkunion/x/taskqueue.FunctionProcessor[github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/workflow.State]]")
	shared.TypeRegistryStore[Queuer[any]]("github.com/widmogrod/mkunion/x/taskqueue.Queuer[any]")
	shared.TypeRegistryStore[SQSQueue[schemaless.Record[schema.Schema]]]("github.com/widmogrod/mkunion/x/taskqueue.SQSQueue[github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/schema.Schema]]")
	shared.TypeRegistryStore[Task[schemaless.Record[workflow.State]]]("github.com/widmogrod/mkunion/x/taskqueue.Task[github.com/widmogrod/mkunion/x/storage/schemaless.Record[github.com/widmogrod/mkunion/x/workflow.State]]")
	shared.TypeRegistryStore[testing.T]("testing.T")
	shared.TypeRegistryStore[workflow.Flow]("github.com/widmogrod/mkunion/x/workflow.Flow")
	shared.TypeRegistryStore[workflow.FlowRef]("github.com/widmogrod/mkunion/x/workflow.FlowRef")
	shared.TypeRegistryStore[workflow.FunctionInput]("github.com/widmogrod/mkunion/x/workflow.FunctionInput")
	shared.TypeRegistryStore[workflow.FunctionOutput]("github.com/widmogrod/mkunion/x/workflow.FunctionOutput")
}
