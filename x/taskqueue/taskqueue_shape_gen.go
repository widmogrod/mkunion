// Code generated by mkunion. DO NOT EDIT.
package taskqueue

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(DescriptionShape())
	shape.Register(FunctionProcessorShape())
	shape.Register(TaskQueueShape())
	shape.Register(TaskShape())
}

//shape:shape
func DescriptionShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Description",
		PkgName:       "taskqueue",
		PkgImportName: "github.com/widmogrod/mkunion/x/taskqueue",
		Fields: []*shape.FieldLike{
			{
				Name: "Change",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
			},
			{
				Name: "Entity",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Filter",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
	}
}

//shape:shape
func FunctionProcessorShape() shape.Shape {
	return &shape.StructLike{
		Name:          "FunctionProcessor",
		PkgName:       "taskqueue",
		PkgImportName: "github.com/widmogrod/mkunion/x/taskqueue",
		TypeParams: []shape.TypeParam{
			shape.TypeParam{
				Name: "T",
				Type: &shape.Any{},
			},
		},
		Fields: []*shape.FieldLike{
			{
				Name: "F",
				Type: &shape.Any{},
			},
		},
	}
}

//shape:shape
func TaskShape() shape.Shape {
	return &shape.StructLike{
		Name:          "Task",
		PkgName:       "taskqueue",
		PkgImportName: "github.com/widmogrod/mkunion/x/taskqueue",
		TypeParams: []shape.TypeParam{
			shape.TypeParam{
				Name: "T",
				Type: &shape.Any{},
			},
		},
		Fields: []*shape.FieldLike{
			{
				Name: "ID",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
			{
				Name: "Data",
				Type: &shape.PointerLike{
					Type: &shape.RefName{
						Name:          "T",
						PkgName:       "",
						PkgImportName: "",
					},
				},
			},
			{
				Name: "Deleted",
				Type: &shape.PrimitiveLike{Kind: &shape.BooleanLike{}},
			},
			{
				Name: "Meta",
				Type: &shape.MapLike{
					Key: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
					Val: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
			},
		},
	}
}

//shape:shape
func TaskQueueShape() shape.Shape {
	return &shape.StructLike{
		Name:          "TaskQueue",
		PkgName:       "taskqueue",
		PkgImportName: "github.com/widmogrod/mkunion/x/taskqueue",
		TypeParams: []shape.TypeParam{
			shape.TypeParam{
				Name: "T",
				Type: &shape.Any{},
			},
		},
	}
}
