// Code generated by mkunion. DO NOT EDIT.
package shape

func init() {
	Register(TypeScriptOptionsShape())
	Register(TypeScriptRendererShape())
	Register(packageImportNameShape())
	Register(packageNameShape())
	Register(shapeNameShape())
}

//shape:shape
func TypeScriptOptionsShape() Shape {
	return &StructLike{
		Name:          "TypeScriptOptions",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
	}
}

//shape:shape
func TypeScriptRendererShape() Shape {
	return &StructLike{
		Name:          "TypeScriptRenderer",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
	}
}

//shape:shape
func packageImportNameShape() Shape {
	return &AliasLike{
		Name:          "packageImportName",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
		IsAlias:       true,
		Type:          &PrimitiveLike{Kind: &StringLike{}},
	}
}

//shape:shape
func packageNameShape() Shape {
	return &AliasLike{
		Name:          "packageName",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
		IsAlias:       true,
		Type:          &PrimitiveLike{Kind: &StringLike{}},
	}
}

//shape:shape
func shapeNameShape() Shape {
	return &AliasLike{
		Name:          "shapeName",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
		IsAlias:       true,
		Type:          &PrimitiveLike{Kind: &StringLike{}},
	}
}
