// Code generated by mkunion. DO NOT EDIT.
package shape

func init() {
	Register(IndexedTypeWalkerShape())
	Register(InferredInfoShape())
	Register(NodeAndTagShape())
}

//shape:shape
func IndexedTypeWalkerShape() Shape {
	return &StructLike{
		Name:          "IndexedTypeWalker",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
	}
}

//shape:shape
func InferredInfoShape() Shape {
	return &StructLike{
		Name:          "InferredInfo",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
	}
}

//shape:shape
func NodeAndTagShape() Shape {
	return &StructLike{
		Name:          "NodeAndTag",
		PkgName:       "shape",
		PkgImportName: "github.com/widmogrod/mkunion/x/shape",
		Fields: []*FieldLike{
			{
				Name: "Name",
				Type: &PrimitiveLike{Kind: &StringLike{}},
			},
			{
				Name: "Node",
				Type: &RefName{
					Name:          "Node",
					PkgName:       "ast",
					PkgImportName: "go/ast",
				},
			},
			{
				Name: "Tag",
				Type: &RefName{
					Name:          "Tag",
					PkgName:       "shape",
					PkgImportName: "github.com/widmogrod/mkunion/x/shape",
				},
			},
		},
	}
}
